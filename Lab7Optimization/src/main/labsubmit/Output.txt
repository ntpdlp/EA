100.000 Owner x 10 Pet = 1.000.000 rows


Default
To fetch this data from the database took 34032 milliseconds.

Following Optimization Solution:
a)
@LazyCollection(LazyCollectionOption.EXTRA)
=>To fetch this data from the database took 18802 milliseconds.


b)
@BatchSize(size = 5)
To fetch this data from the database took 22228 milliseconds.
@BatchSize(size = 10)
To fetch this data from the database took 21942 milliseconds.
@BatchSize(size = 50)
To fetch this data from the database took 21693 milliseconds.


c)
@Fetch(FetchMode.SUBSELECT)
=>To fetch this data from the database took 17456 milliseconds.


d)
TypedQuery<Owner> query = em.createQuery("from Owner o JOIN FETCH Pet p WHERE o.id = p.clientid", Owner.class);
=>To fetch this data from the database took 17456 milliseconds.


e)
EntityGraph<Owner> graph = em.createEntityGraph(Owner.class);
graph.addAttributeNodes("pets");
TypedQuery<Owner> query = em.createQuery("from Owner",Owner.class);
query.setHint("javax.persistence.fetchgraph", graph);
=> To fetch this data from the database took 16438 milliseconds.

